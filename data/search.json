{"list":[{"title":"Controller","link":"<a href=\"module-Controller.html\">Controller</a>","description":"<p>A module to handle command-line interface commands.</p>"},{"title":"Features","link":"<a href=\"module-Features.html\">Features</a>","description":"<p>A module to implement functions to extract features from the\nstream of HTTP/S requests and responses.\nThis module returns an object containing all features that are\nextracted in {@link Wdg.addEdge|<code>Wdg.addEdge()</code>}.\nA feature itself is an object consisting of three properties:\n<code>extract</code>, <code>accumulate</code> (optional), and <code>set</code>.\n<strong>NOTE:</strong> The key of this object will be used as the name\nof the feature.\nIts properties have to implement functions, which are\ncalled at different stages in the graph generation process.\nSee below an example for a feature object:</p>\n<pre><code>  tracking: {\n   'extract': (r, acc) =&gt; {\n     let isTracking = r.labels\n       .reduce((acc, val) =&gt;\n         acc || val.isLabeled,\n         false\n       );\n\n     return Util.count(isTracking, acc);\n   },\n   'set': (feature, attrs) =&gt; {\n     return Util.ratio(attrs[feature], attrs.count);\n   }\n }\n</code></pre>"},{"title":"Util","link":"<a href=\"module-Util.html\">Util</a>","description":"<p>A module for utility functions.</p>"},{"title":"Wdg","link":"<a href=\"Wdg.html\">Wdg</a>","description":"<p>Class <code>Wdg</code> which stands for weighted directed graph.</p>"}]}